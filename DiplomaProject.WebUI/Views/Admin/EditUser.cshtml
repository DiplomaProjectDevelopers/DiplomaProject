@model DiplomaProject.Domain.ViewModels.UserViewModel

@{
    ViewData["Title"] = "EditUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<h3>Editing user @Model.Username</h3>

<h4>Select new role for current user.</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditUser">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                @Html.DisplayFor(m => m.Username)
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                @Html.DisplayFor(m => m.FirstName)
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                @Html.DisplayFor(m => m.LastName)
                </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                @Html.DisplayFor(m => m.Email)
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                @Html.DisplayFor(m => m.PhoneNumber)
            </div>
            <div class="form-group">
                <label asp-for="CurrentRoles" class="control-label"></label>
                @Html.DisplayFor(m => m.CurrentRoles)
            </div>
            <div class="form-group">
                <label asp-for="Role" class="control-label"></label>
                @Html.DropDownListFor(m => m.Role, new SelectList(ViewBag.Roles, "Id", "Name"))
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
