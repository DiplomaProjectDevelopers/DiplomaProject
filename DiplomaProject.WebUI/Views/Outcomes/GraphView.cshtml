@model IEnumerable<EdgeViewModel>

@{
    ViewData["Title"] = "GraphPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Outcomes dependencies</h2>
<p>Make dependencies between outcomes for the selected profession.</p>
<div>
    <div id="designer">
        <div>
            <div>Selected Profession <em>@ViewBag.Profession?.Name</em></div>
            <div id="message" class="text-info"></div>
        </div>
        <div class="row container">
            <div id="dependencies" class="col-md-6 container">
            </div>
            <div class="col-md-6">
                Not Implemented
            </div>
        </div>
        <div id="infoBlock" class="text-info">
            <span style="color:darkslateblue">* Options with this color are added new.</span>
        </div>
        <div class="row">
            <div class="col-md-2">
                <button onclick="addDependency()" class="btn btn-block btn-primary glyphicon-plus">Add Dependency</button>
            </div>
        </div>
    </div>
    <div id="horLine">
        <hr />
    </div>
    <div>
        <button class="btn btn-success" onclick="onSubmit()">Save</button>
        <button class="btn btn-default" onclick="location.href='@Url.Action("Index", "Outcomes")'">Cancel</button>
    </div>
</div>
@section Styles{
    <link rel="stylesheet" href="~/custom_contents/GraphView.css" />
}
@section Scripts {

    <script src="~/custom_scripts/GraphBuilder.js" type="text/javascript"></script>
    <script>
        var professionId = @ViewBag.Profession?.Id
        $(document).ready(function ()
        {
                $(document).ready(() => {
                    let edges = '@(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)))';
                    if (!sessionStorage.getItem('edges'))
                    {
                        sessionStorage.setItem('edges', edges || JSON.stringify([]));
                    }
                    if (!sessionStorage.getItem('nextId'))
                    {
                    sessionStorage.setItem('nextId', '-1');

                    }
                    if (!sessionStorage.getItem('nodes'))
                    {
                 sessionStorage.setItem('nodes', '@(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Outcomes)))');
                }
                edges = JSON.parse(sessionStorage.getItem('edges'));
                updateDependencies(edges);
                    });
    });
    </script>
    <script>

    </script>
}