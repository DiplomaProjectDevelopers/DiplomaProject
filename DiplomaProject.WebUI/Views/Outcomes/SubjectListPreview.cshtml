@model SubjectListViewModel

@{
    ViewData["Title"] = "Առարկաների նախադիտում";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<հ2>Առաջարկվող առարկաները  "@Model.ProfessionName" մասնագիտության համար</հ2>
<p>Վերջնարդյունքների կապերի  հիման վրա ձևավորել ենք հետևյալ առարկաները</p>
<form asp-action="SaveSubjects" asp-controller="Subject" method="post">
    <div class="row container" id="card-list">
        @*@for (int i = 0; i < Model.Subjects.Count; i++)
            {
                <div class="col-md-3 col-md-offset-1">
                    <div class="panel panel-primary">
                        <div class="panel-heading">@Model.Subjects[i].Name</div>
                        <div class="panel-body">
                            <div class="form-group">
                                <label asp-for="@Model.Subjects[i].SubjectModuleId" class="control-label"></label>
                                <select asp-for="@Model.Subjects[i].SubjectModuleId" asp-items="@(new SelectList(ViewBag.Modules, "Id", "Name"))" class="form-control">
                                    <option>--ընտրեք առարկայական մոդուլը--</option>
                                </select>
                                <span asp-validation-for="@Model.Subjects[i].SubjectModuleId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="@Model.Subjects[i].Name" class="control-label"></label>
                                <input asp-for="@Model.Subjects[i].Name" class="form-control" />
                                <span asp-validation-for="@Model.Subjects[i].Name" class="text-danger"></span>
                            </div>
                            @for (int j = 0, length = Model.Subjects[i].Outcomes.Count; j < length; j++)
                            {
                                <p class="thumbnail">
                                    @Model.Subjects[i].Outcomes[j].Name
                                    <a class="moveBtn" data-toggle="modal" data-target="#moveModal" data-id="@Model.Subjects[i].Outcomes[j].Id">
                                        <span class="glyphicon glyphicon-share" onclick="onModalLoad(@Model.Subjects[i].Outcomes[j].Id, @Model.Subjects[i].Id)"></span>
                                    </a>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }*@
    </div>
    <div class="modal fade" id="moveModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Move outcome to</h4>
                </div>
                <div id="moveModal_body" class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="moveOutcome()">Move</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <button type="submit" value="Save subjects" class="btn btn-primary">Save subjects</button>
        <button type="button" value="Cancel" asp-action="Cancel" class="btn btn-default">Cancel</button>
    </div>
</form>

@section Scripts{
    <script>
        var model;
        var modules;
        $(document).ready(function () {
            model = @Html.Raw(Json.Serialize(Model));
            modules = @Html.Raw(Json.Serialize(ViewBag.Modules));
            renderCards();
            console.log(model);
        })
        function onModalLoad(outcomeId, subjectId){
            sessionStorage.clear();
            sessionStorage.setItem('outcomeId', outcomeId.toString());
            sessionStorage.setItem('subject', subjectId.toString());
            $('.modal-body select').val(subjectId);

        }

        $('#moveModal').on('hidden.bs.modal', function () {
            sessionStorage.clear();
        });

        $('#moveModal').on('shown.bs.modal', function () {
            renderModal();
        });

        function moveOutcome() {
            const outcomeId = parseInt(sessionStorage.getItem('outcomeId'));
            const subject = parseInt(sessionStorage.getItem('subjectId'));

        }
    </script>
    <script>
        function renderCards() {
            const cards = document.getElementById('card-list');
            while (cards.firstChild) {
                cards.removeChild(cards.firstChild);
            }
            for (let i = 0; i < model.subjects.length; i++) {
                const block = document.createElement('div');
                block.setAttribute('class', 'col-md-3 col-md-offset-1');
                const panel = document.createElement('div');
                panel.setAttribute('class', 'panel panel-primary');
                const heading = document.createElement('div');
                heading.innerText = model.subjects[i].name;
                heading.setAttribute('class', 'panel-heading');
                panel.appendChild(heading);
                const body = document.createElement('div');
                body.setAttribute('class', 'panel-body');
                const module = document.createElement('div');
                module.setAttribute('class', 'form-group');
                const moduleLabel = document.createElement('label');
                moduleLabel.setAttribute('class', 'control-label');
                moduleLabel.innerText = 'Առարկայական մոդուլ';
                module.appendChild(moduleLabel);
                const moduleSelect = document.createElement('select');
                moduleSelect.setAttribute('class', 'form-control');
                const emptyOption = document.createElement('option');
                emptyOption.value = -1;
                emptyOption.text = 'Ընտրեք մոդուլը';
                moduleSelect.appendChild(emptyOption);
                modules.forEach(module => {
                    const option = document.createElement('option');
                    option.value = module.id;
                    option.text = module.name;
                    moduleSelect.appendChild(option);
                });
                module.appendChild(moduleSelect);
                const span = document.createElement('span');
                span.setAttribute('class', 'text=danger');
                module.appendChild(span);
                body.appendChild(module);

                const name = document.createElement('div');
                name.setAttribute('class', 'form-group');
                const nameLabel = document.createElement('label');
                nameLabel.setAttribute('class', 'control-label');
                nameLabel.innerText = 'Առարկայի անուն';
                name.appendChild(nameLabel);
                const nameInput = document.createElement('input');
                nameInput.setAttribute('class', 'form-control');
                name.appendChild(nameInput);
                const nameSpan = document.createElement('span');
                nameSpan.setAttribute('class', 'text=danger');
                name.appendChild(nameSpan);
                body.appendChild(name);

                for (let j = 0; j < model.subjects[i].outcomes.length; j++) {
                    const p = document.createElement('p');
                    p.setAttribute('class', 'thumbnail');
                    p.innerText = model.subjects[i].outcomes[j].name;
                    const a = document.createElement('a');
                    a.setAttribute('class', 'moveBtn');
                    a.setAttribute('data-toggle', 'modal');
                    a.setAttribute('data-target', '#moveModal');
                    a.setAttribute('data-id', model.subjects[i].outcomes[j].id);
                    const span = document.createElement('span');
                    span.setAttribute('class', 'glyphicon glyphicon-share');
                    span.addEventListener('click', onModalLoad(model.subjects[i].outcomes[j].id, model.subjects[i].id));
                    a.appendChild(span);
                    p.appendChild(a);
                    body.appendChild(p);
                }
                panel.appendChild(body);
                block.appendChild(panel);

                cards.appendChild(block);
            }

        }
        function renderModal() {
            const label = document.createElement('label');
            label.setAttribute('class', 'control-label');
            label.innerText = 'Ընտրեք առարկան, որի մեջ ցանկանում եք տեղափոխել';
            const select = document.createElement('select');
            select.setAttribute('class', 'form-control');
            model.subjects.forEach(subject => {
                const option = document.createElement('option');
                option.value = subject.id;
                option.text = subject.name;
                select.appendChild(option);
            });
            const modal = document.getElementById('moveModal_body');
            while (modal.firstChild) {
                modal.removeChild(modal.firstChild);
            }
            modal.appendChild(label);
            modal.appendChild(select);
        }
    </script>
}

@section Styles{
    <link rel="stylesheet" href="~/custom_contents/SubjectListPreview.css" />
}